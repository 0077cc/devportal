--- modules/password_policy/password_policy.module	2018-03-15 14:21:38.940774953 +0000
+++ modules/password_policy/password_policy.module	2018-03-15 14:22:50.629147516 +0000
@@ -85,10 +85,6 @@
   $config = \Drupal::config('user.settings');
   $show_password_policy_status = TRUE;

-  if ($account->hasPermission('bypass password policies')) {
-    $show_password_policy_status = FALSE;
-  }
-
   if ($account->isAnonymous() and $config->get('verify_mail')) {
     $show_password_policy_status = FALSE;
   }
@@ -172,11 +168,15 @@
   $roles = $form_state->getValue('roles');
   if (empty($roles)) {
     // Get if from $form; form state is always empty the first time.
-    $roles = $form['account']['roles']['#default_value'];
+    if(isset($form['roles'])) {
+      $roles = $form['roles']['#default_value'];
+    } else if(isset($form['account']['roles'])) {
+      $roles = $form['account']['roles']['#default_value'];
+    }
   }
   $roles = array_combine($roles, $roles);

-  $original_roles = $form['account']['roles']['#default_value'];
+  $original_roles = (isset($form['roles'])) ? $form['roles']['#default_value'] : $form['account']['roles']['#default_value'];
   $original_roles = array_combine($original_roles, $original_roles);

   // Add user doesn't automatically register authenticated, so lets add it.
@@ -203,8 +203,11 @@

   // Force failure.
   $force_failure = FALSE;
-
-  if ($roles != $original_roles && $form_state->getValue('pass') == '' && !empty($applicable_policies)) {
+  $pass = $form_state->getValue('pass');
+  if (is_array($pass) && array_key_exists('pass1', $pass)) {
+    $pass = $pass['pass1'];
+  }
+  if ($roles != $original_roles && $pass == '' && !empty($applicable_policies)) {
     // New role has been added and applicable policies are available.
     $force_failure = TRUE;
   }
@@ -215,17 +218,31 @@
   // TODO - Turn this into configuration.
   $user_context_fields = ['mail', 'name', 'uid'];
   $user_context_values = [];
+  $uid = \Drupal::routeMatch()->getRawParameter('user');
   foreach ($user_context_fields as $user_context_field) {
     $user_context_values[$user_context_field] = $form_state->getValue($user_context_field);

     if ($user_context_field == 'uid') {
-      $user_context_values[$user_context_field] = \Drupal::routeMatch()->getRawParameter('user');
+      $user_context_values[$user_context_field] = $uid;
     }
     // Check default value.
     if (empty($user_context_values[$user_context_field]) and !empty($form['account'][$user_context_field]['#default_value'])) {
       $user_context_values[$user_context_field] = $form['account'][$user_context_field]['#default_value'];
     }
   }
+  if (!isset($user_context_values['name']) || !isset($user_context_values['mail'])) {
+    if ($uid !== NULL) {
+      $user = User::load($uid);
+      if ($user !== NULL) {
+        if (!isset($user_context_values['name'])) {
+          $user_context_values['name'] = $user->getUsername();
+        }
+        if (!isset($user_context_values['mail'])) {
+          $user_context_values['mail'] = $user->getEmail();
+        }
+      }
+    }
+  }
   /** @var \Drupal\password_policy\Entity\PasswordPolicy $policy */
   foreach ($applicable_policies as $policy_id => $policy) {
     $policy_constraints = $policy->getConstraints();
@@ -236,7 +253,7 @@
       $plugin_object = $plugin_inst->createInstance($constraint['id'], $constraint);

       // Execute validation.
-      $validation = $plugin_object->validate($form_state->getValue('pass'), $user_context_values);
+      $validation = $plugin_object->validate($pass, $user_context_values);
       if ($generate_policy_table) {
         if ($validation->isValid() && !$force_failure) {
           $status = t('Pass');
@@ -248,7 +265,7 @@
           }
           $status = t('Fail - @message', ['@message' => $message]);
           // Throw error to ensure form will not submit.
-          if (!$failed and $form_state->getValue('pass') != '') {
+          if (!$failed and $pass != '') {
             // Set storage value since you cant throw errors here.
             $storage = $form_state->getStorage();
             $storage['password_fails_policies'] = TRUE;
@@ -264,7 +281,7 @@
         $policies_table_rows[] = $table_row;
       }
       else {
-        if (!$validation->isValid() and !$failed and $form_state->getValue('pass') != '') {
+        if (!$validation->isValid() and !$failed and $pass != '') {
           // Throw error to ensure form will not submit.
           $failed = TRUE;
         }
