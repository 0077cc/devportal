--- modules/views_ajax_history/js/views_ajax_history.js	2018-08-09 11:39:21.000000000 +0100
+++ modules/views_ajax_history/js/views_ajax_history.js	2018-08-09 11:40:40.000000000 +0100
@@ -227,6 +227,21 @@
   };
 
   /**
+   * Parse a URL query string
+   *
+   * @param queryString
+   *   String containing the query to parse.
+   */
+  var parseQuery = function(queryString) {
+    var query = {};
+    $.map(queryString.split('&'), function(val) {
+      var s = val.split('=');
+      query[s[0]] = s[1];
+    });
+    return query;
+  };
+
+  /**
    * Override beforeSend to clean up the Ajax submission URL.
    *
    * @param {XMLHttpRequest} xmlhttprequest
@@ -235,11 +250,17 @@
    *   jQuery.ajax options.
    */
   Drupal.Ajax.prototype.beforeSend = function (xmlhttprequest, options) {
-    // Override the URL to not contain any fields that were submitted.
-    options.url = drupalSettings.views.ajax_path + '?' + Drupal.ajax.WRAPPER_FORMAT + '=drupal_ajax';
+    // Check that the Ajax call is coming from a View.
+    if (typeof options.url != 'undefined' && options.url.indexOf('/views/ajax') != -1 && options.type !== 'GET') {
+      var data = (typeof options.data === 'string') ? parseQuery(options.data) : {};
+      if (data.view_name) {
+        // Override the URL to not contain any fields that were submitted.
+        options.url = drupalSettings.views.ajax_path + '?' + Drupal.ajax.WRAPPER_FORMAT + '=drupal_ajax';
 
-    // Call the original Drupal method with the right context.
-    beforeSend.apply(this, arguments);
+        // Call the original Drupal method with the right context.
+        beforeSend.apply(this, arguments);
+      }
+    }
   }
 
 })(jQuery, Drupal, drupalSettings);
